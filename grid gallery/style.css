@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');
*{/*resetting the default*/
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html,body{
    line-height: 1.4;
    font-weight: 300;
    font-family: "Roboto", serif;
}
.container{
    display:grid;
    grid-template-columns: repeat(6,1fr);
    grid-auto-rows: 100px 300px;
    grid-gap:10px;
    grid-auto-flow: dense;
}
.gallery-item{
  width:100%;
  height:100%;
  position: relative;
}
.gallery-item .item{
    width:100%;
    height:100%;
    overflow: hidden;
}
.gallery-item .item img{
    width:100%;
    height:100%;
    object-fit: cover;
    object-position: 50% 50%;
  transition: 0.5s ease-in-out;
}
.gallery-item .item img:hover{
    transform: scale(1.05);
    transition: 0.5s ease-in-out;
}
.w1{
    grid-column: span 1;
}
.w2{
    grid-column: span 2;
}
.w3{
    grid-column: span 3;
}
.w4{
    grid-column: span 4;
}
.w5{
    grid-column: span 5;
}
.w6{
    grid-column: span 6;
}
.w7{
    grid-column: span 7;
}
.h1{
    grid-row: span 1;
}
.h2{
    grid-row: span 2;
}
.h3{
    grid-row: span 3;
}
.h4{
    grid-row: span 4;
}
.h5{
    grid-row: span 5;
}
.h6{
    grid-row: span 6;
}
.h7{
    grid-row: span 7;
}
/*
@media screen and (max-width:500px)
{
    .container{
        grid-template-columns: repeat(1,fr);
    }
    .w1,.w2,.w3,.w4,.w5,.w6,.w7,.h1,.h2,.h3,.h4,.h5,.h6,.h7{
        grid-column: span 1 ;
        grid-row: span 1;
    }
}
*/
/* ðŸ“Œ Media Query for Screens 786px and Below */
@media (max-width: 786px) {
    /*Since this program didnâ€™t use grid-template-areas, 
    so grid-template-columns: 1fr; would correctly stack everything into a single column.*/
    .container {
        grid-template-columns: 1fr; /* All items in 1 column */
    }
}

/* ðŸ“Œ Additional Media Query for Smaller Screens (500px and Below) */
@media (max-width: 500px) {
    .container {
        grid-template-columns: 1fr; /* Ensures items remain in 1 column */
    }
}

/*
.container (Defining the Grid Layout)

Creates a 6-column layout (repeat(6, 1fr)) where each column takes equal space.
grid-auto-rows: 100px 300px;
First row = 100px
Second row = 300px
Repeats this pattern for all rows.
grid-gap: 10px; adds spacing between items.
grid-auto-flow: dense;
Forces items to fill gaps efficiently.
If thereâ€™s empty space, items with smaller spans can move up.

 Gallery Item Styling:
.gallery-item 

Each .gallery-item takes full width and height of its grid cell.
position: relative; helps for absolute positioning inside.

.gallery-item .item (Image Box Styling)

Ensures that images never exceed their container size.
overflow: hidden; prevents images from overflowing.

.gallery-item .item img ( Image Styling)

object-fit: cover; ensures images fill their container without distortion.
object-position: 50% 50%; centers the images.
transition: 0.5s ease-in-out; makes hover effects smoother.

(Controlling Item Sizes in the Grid):The .wX classes define how many columns an item takes.(w1,w2,...)
                                   :The .hX classes define how many rows an item takes.(h1,h2,...)

 Making It Responsive              : When screen width â‰¤ 786px, all images stack into 1 column.
                                   : When screen width â‰¤ 500px, it remains a single-column layout.

Alternative Media Query (Disabled but Can Be Used):This forces all items to take 1 column and 1 row when below 500px.
Currently commented out (disabled).


*/